{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"equipment_container\"\n};\nconst _hoisted_2 = {\n  class: \"add_equipment\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"type\"\n}, \"Тип оборудования\", -1 /* HOISTED */);\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"serial_number\"\n}, \"Серийный номер\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"text\"\n}, \"Примечание\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-group\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Добавить\")], -1 /* HOISTED */);\nconst _hoisted_11 = {\n  class: \"equipment_content\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Оборудование\", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  class: \"equipment_list\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-group\"\n}, [/*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"serial_number\"\n}, \"Серийный номер\"), /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\",\n  class: \"form-control\",\n  id: \"serial_number\",\n  value: \"{{ item.serial_number }}\"\n})], -1 /* HOISTED */);\nconst _hoisted_15 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createCommentVNode(\"input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\" v-model=\\\"fk_type\\\"\"), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.fk_type = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.type.results, (item, indx) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: indx,\n      value: item.id\n    }, _toDisplayString(item.type_equipment), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.fk_type]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"serial_number\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.serial_number = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.serial_number]])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"form-control\",\n    id: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.text = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.text]])]), _hoisted_10], 32 /* HYDRATE_EVENTS */)]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"ul\", _hoisted_13, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.data.results, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, [_createElementVNode(\"h3\", null, \"Тип оборудования: \" + _toDisplayString(item.fk_type), 1 /* TEXT */), _createCommentVNode(\"p>Серийный номер: {{ item.serial_number }}</p\"), _hoisted_14, _createElementVNode(\"p\", null, \"Примечание: \" + _toDisplayString(item.text), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteEquipment(item)\n    }, \"Удалить\", 8 /* PROPS */, _hoisted_15)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","id","value","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_3","_hoisted_4","_createCommentVNode","$data","fk_type","$event","_Fragment","_renderList","results","item","indx","key","type_equipment","_hoisted_5","_hoisted_6","_hoisted_7","serial_number","_hoisted_8","_hoisted_9","text","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","data","_toDisplayString","_hoisted_14","onClick","deleteEquipment","_hoisted_15"],"sources":["/home/pavel/Документы/NEW_DJUNGO_PROJECTS/test_api/frontend/django_client/src/components/EquipmentDrf.vue"],"sourcesContent":["<template>\n    <div class=\"equipment_container\">\n        <div class=\"add_equipment\">\n            <form v-on:submit.prevent=\"submitForm\">\n                <div class=\"form-group\">\n                    <label for=\"type\">Тип оборудования</label>\n                    <!--input type=\"text\" class=\"form-control\" id=\"type\" v-model=\"fk_type\"-->\n                    <select v-model=\"fk_type\">\n                        <option v-for=\"(item, indx) in type.results\" :key=\"indx\" :value=\"item.id\">{{ item.type_equipment }}</option>\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"serial_number\">Серийный номер</label>\n                    <input type=\"text\" class=\"form-control\" id=\"serial_number\" v-model=\"serial_number\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"text\">Примечание</label>\n                    <textarea class=\"form-control\" id=\"text\" v-model=\"text\"></textarea>\n                </div>\n                <div class=\"form-group\">\n                    <button type=\"submit\">Добавить</button>\n                </div>\n            </form>\n        </div>\n        <div class=\"equipment_content\">\n            <h1>Оборудование</h1>\n            <ul class=\"equipment_list\">\n                <li v-for=\"item in data.results\" :key=\"item.id\">\n                    <h3>Тип оборудования: {{ item.fk_type }}</h3>\n                    <!--p>Серийный номер: {{ item.serial_number }}</p-->\n                    <div class=\"form-group\">\n                        <label for=\"serial_number\">Серийный номер</label>\n                        <input type=\"text\" class=\"form-control\" id=\"serial_number\" value=\"{{ item.serial_number }}\" >\n                    </div>\n                    <p>Примечание: {{ item.text }}</p>\n                    <button @click=\"deleteEquipment(item)\">Удалить</button>\n                </li>\n            </ul>\n        </div>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n    //import { ref } from 'vue';\n    export default {\n        data() {\n            return {\n                data: [],\n                type: [],\n                fk_type: '',\n                serial_number: '',\n                text: ''\n            }\n        },\n        methods: {\n            async getData() {\n                try {\n                    const response = await axios.get('http://127.0.0.1:9000/equipment/');\n                    this.data = response.data;\n                    console.log('received data: ', response.data);\n                } catch (error) {\n                    // log the error\n                    console.log(error);\n                }\n            },\n            async getType() {\n                try {\n                    const response = await axios.get('http://127.0.0.1:9000/equipment-type/');\n                    this.type = response.data;\n                    console.log('received type: ', this.type.results);\n                } catch (error) {\n                    // log the error\n                    console.log(error);\n                }\n            },\n            async submitForm(){\n                try {\n                    // Send a POST request to the API\n                    await axios.post('http://localhost:9000/equipment/', {\n                        fk_type: this.fk_type,\n                        serial_number: this.serial_number,\n                        text: this.text,\n                        completed: false\n                    });\n                    console.log('this.fk_type = ', this.fk_type);\n                    //this.equipment.push(response.data);\n                    this.getData();\n                    this.fk_type = '';\n                    this.serial_number = '';\n                    this.text = '';\n                } catch (error) {\n                    // Log the error\n                    console.log(error);\n                }\n            },\n            async deleteEquipment(item){\n                let confirmation = confirm(\"Вы действительно хотите удалить оборудование?\");\n                if(confirmation){\n                    try{\n                        // Send a request to delete the item\n                        await axios.delete(`http://localhost:9000/equipment/${item.id}`);\n                        // Refresh the equipment list\n                        this.getData();\n                    }catch(error){\n                        console.log(error)\n                    }\n                }\n            }\n        },\n        created() {\n            this.getData();\n            this.getType();\n        }\n    }\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}