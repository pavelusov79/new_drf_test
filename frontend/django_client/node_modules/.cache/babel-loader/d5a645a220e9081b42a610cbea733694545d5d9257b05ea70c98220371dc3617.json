{"ast":null,"code":"import axios from 'axios';\n//import { ref } from 'vue';\nexport default {\n  data() {\n    return {\n      data: [],\n      type: [],\n      fk_type: '',\n      serial_number: '',\n      text: ''\n    };\n  },\n  methods: {\n    onChange: function (e) {\n      var id = e.target.value;\n      console.log('id = ', id);\n    },\n    async getData() {\n      try {\n        const response = await axios.get('http://127.0.0.1:9000/equipment/');\n        this.data = response.data;\n      } catch (error) {\n        // log the error\n        console.log(error);\n      }\n    },\n    async getType() {\n      try {\n        const response = await axios.get('http://127.0.0.1:9000/equipment-type/');\n        this.type = response.data;\n      } catch (error) {\n        // log the error\n        console.log(error);\n      }\n    },\n    async submitForm() {\n      try {\n        // Send a POST request to the API\n        await axios.post('http://localhost:9000/equipment/', {\n          fk_type: this.fk_type,\n          serial_number: this.serial_number,\n          text: this.text,\n          completed: false\n        });\n        console.log('this.fk_type = ', this.fk_type);\n        //this.data.push(response.data);\n        this.getData();\n        this.fk_type = '';\n        this.serial_number = '';\n        this.text = '';\n      } catch (error) {\n        // Log the error\n        console.log(error);\n      }\n    },\n    async deleteEquipment(item) {\n      let confirmation = confirm(\"Вы действительно хотите удалить оборудование?\");\n      if (confirmation) {\n        try {\n          // Send a request to delete the item\n          await axios.delete(`http://localhost:9000/equipment/${item.id}`);\n          // Refresh the equipment list\n          this.getData();\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    },\n    async toggleEquipment(item) {\n      try {\n        // Send a request to API to update the equipment\n        const response = await axios.put(`http://localhost:9000/equipment/${item.id}/`, {\n          //completed: false,\n          fk_type: item.fk_type,\n          serial_number: item.serial_number,\n          text: item.text\n        });\n        console.log('response.data = ', response.data);\n        //let itemIndex = this.data.findIndex(t => t.id === item.id);\n        //console.log('itemIndex = ', itemIndex);\n        // Reset the equipment array with the new data of the updated item\n        //this.data = this.data.map((item) => {\n        //if(this.data.findIndex(t => t.id === item.id) === itemIndex){\n        // console.log('yes');\n        // return response.data;\n        // }\n        //return item;\n        //});\n      } catch (error) {\n        // Log any error\n        console.log(error);\n      }\n    }\n  },\n  created() {\n    this.getData();\n    this.getType();\n  }\n};","map":{"version":3,"names":["axios","data","type","fk_type","serial_number","text","methods","onChange","e","id","target","value","console","log","getData","response","get","error","getType","submitForm","post","completed","deleteEquipment","item","confirmation","confirm","delete","toggleEquipment","put","created"],"sources":["/home/pavel/Документы/NEW_DJUNGO_PROJECTS/test_api/frontend/django_client/src/components/EquipmentDrf.vue"],"sourcesContent":["<template>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n    <div class=\"equipment_container\">\n        <div class=\"add_equipment\">\n            <h2>Добавить оборудование</h2>\n            <form v-on:submit.prevent=\"submitForm\" class=\"col-4 mx-auto\">\n                <div class=\"form-group\">\n                    <label for=\"type\">Тип оборудования</label>\n                    <!--input type=\"text\" class=\"form-control\" id=\"type\" v-model=\"fk_type\"-->\n                    <select v-model=\"fk_type\" class=\"form-control\" v-on:change=\"onChange($event)\">\n                        <option v-for=\"(item, indx) in type.results\" :key=\"indx\" :value=\"item.id\">{{ item.type_equipment }} (id = {{ item.id }})</option>\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"serial_number\">Серийный номер</label>\n                    <input type=\"text\" class=\"form-control\" id=\"serial_number\" v-model=\"serial_number\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"text\">Примечание</label>\n                    <textarea class=\"form-control\" id=\"text\" v-model=\"text\"></textarea>\n                </div>\n                <div class=\"form-group\">\n                    <button class=\"btn btn-outline-success w-100 my-3\" type=\"submit\">Добавить</button>\n                </div>\n            </form>\n        </div>\n        <div class=\"equipment_content\">\n            <h1 class=\"mt-4\">Список оборудования</h1>\n            <ul class=\"equipment_list\">\n                <li v-for=\"item in data.results\" :key=\"item.id\">\n                    <h3>Тип оборудования: {{ item.fk_type }}</h3>\n                    <!--div class=\"form-group\">\n                        <label for=\"fk_type\">Тип оборудования</label>\n                        <input type=\"text\" class=\"form-control\" id=\"fk_type\" :value=\"item.fk_type\" @input=\"item.fk_type = $event.target.value\">\n                    </div-->\n                    <!--p>Серийный номер: {{ item.serial_number }}</p-->\n                    <div class=\"form-group col-4 mx-auto\">\n                        <label for=\"serial_number\">Серийный номер</label>\n                        <input type=\"text\" class=\"form-control\" id=\"serial_number\" :value=\"item.serial_number\" @input=\"item.serial_number = $event.target.value\">\n                    </div>\n                    <!--p>Примечание: {{ item.text }}</p-->\n                    <div class=\"form-group col-4 mx-auto\">\n                        <label for=\"text\">Примечание</label>\n                        <textarea class=\"form-control\" id=\"text\" :value=\"item.text\" @input=\"item.text = $event.target.value\" ></textarea>\n                    </div>\n                    <button class=\"btn btn-success mx-2 my-3\" @click=\"toggleEquipment(item)\">Редактировать</button>\n                    <button class=\"btn btn-danger mx-2 my-3\" @click=\"deleteEquipment(item)\">Удалить</button>\n                </li>\n            </ul>\n        </div>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n    //import { ref } from 'vue';\n    export default {\n        data() {\n            return {\n                data: [],\n                type: [],\n                fk_type: '',\n                serial_number: '',\n                text: ''\n            }\n        },\n        methods: {\n            onChange: function(e) {\n                var id = e.target.value;\n                console.log('id = ', id);\n            },\n            async getData() {\n                try {\n                    const response = await axios.get('http://127.0.0.1:9000/equipment/');\n                    this.data = response.data;\n                } catch (error) {\n                    // log the error\n                    console.log(error);\n                }\n            },\n            async getType() {\n                try {\n                    const response = await axios.get('http://127.0.0.1:9000/equipment-type/');\n                    this.type = response.data;\n                } catch (error) {\n                    // log the error\n                    console.log(error);\n                }\n            },\n            async submitForm(){\n                try {\n                    // Send a POST request to the API\n                    await axios.post('http://localhost:9000/equipment/', {\n                        fk_type: this.fk_type,\n                        serial_number: this.serial_number,\n                        text: this.text,\n                        completed: false\n                    });\n                    console.log('this.fk_type = ', this.fk_type);\n                    //this.data.push(response.data);\n                    this.getData();\n                    this.fk_type = '';\n                    this.serial_number = '';\n                    this.text = '';\n                } catch (error) {\n                    // Log the error\n                    console.log(error);\n                }\n            },\n            async deleteEquipment(item){\n                let confirmation = confirm(\"Вы действительно хотите удалить оборудование?\");\n                if(confirmation){\n                    try{\n                        // Send a request to delete the item\n                        await axios.delete(`http://localhost:9000/equipment/${item.id}`);\n                        // Refresh the equipment list\n                        this.getData();\n                    }catch(error){\n                        console.log(error)\n                    }\n                }\n            },\n            async toggleEquipment(item){\n                try{\n\n                    // Send a request to API to update the equipment\n                    const response = await axios.put(`http://localhost:9000/equipment/${item.id}/`, {\n                        //completed: false,\n                        fk_type: item.fk_type,\n                        serial_number: item.serial_number,\n                        text: item.text\n                    });\n                    console.log('response.data = ', response.data);\n                    //let itemIndex = this.data.findIndex(t => t.id === item.id);\n                    //console.log('itemIndex = ', itemIndex);\n                    // Reset the equipment array with the new data of the updated item\n                    //this.data = this.data.map((item) => {\n                        //if(this.data.findIndex(t => t.id === item.id) === itemIndex){\n                           // console.log('yes');\n                           // return response.data;\n                       // }\n                        //return item;\n                    //});\n\n                }catch(error){\n                    // Log any error\n                    console.log(error);\n                }\n            }\n        },\n        created() {\n            this.getData();\n            this.getType();\n        }\n    }\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}